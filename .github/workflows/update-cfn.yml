name: Dynamic CloudFormation Update

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  detect-changes-and-deploy:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Detect changed files
        id: changes
        run: |
          echo "Detecting file changes..."
          # Ensure the branch is fully updated
          git fetch origin ${{ github.ref_name }} || true

          # Determine whether the commit is a merge commit (more than one parent)
          parent_count=$(git rev-list --parents -n 1 HEAD | wc -w)
          echo "Number of parents for HEAD: $parent_count"
          
          if [ "$parent_count" -gt 2 ]; then
            echo "Merge commit detected, using HEAD^2 for diff."
            git diff --name-only HEAD^2 HEAD > changes_detected.txt
          else
            echo "Non-merge commit detected, using HEAD~1 for diff."
            git diff --name-only HEAD~1 > changes_detected.txt
          fi

          echo "Full list of changed files:"
          cat changes_detected.txt

          # Filter for changes in the infrastructure directory
          grep 'infrastructure/' changes_detected.txt > filtered_changes.txt || echo "no-changes" > filtered_changes.txt
          echo "Filtered list of changed files:"
          cat filtered_changes.txt

          if grep -q "no-changes" filtered_changes.txt; then
            echo "No changes detected in infrastructure templates. Skipping deployment."
            echo "should_run=false" >> $GITHUB_ENV
          else
            echo "Changes detected in infrastructure templates. Proceeding with deployment."
            echo "should_run=true" >> $GITHUB_ENV
          fi

      - name: Upload changed files to S3
        if: env.should_run == 'true'
        run: |
          echo "Uploading changed files to S3..."

          if [ ! -s filtered_changes.txt ]; then
            echo "No changes detected. Skipping upload."
            exit 0
          fi

          while read file; do
            if [[ $file == "no-changes" ]]; then
              echo "No changes detected. Skipping upload."
              exit 0
            fi

            if [[ $file == infrastructure/arch-foundation.yaml ]]; then
              s3_path="templates/arch-foundation.yaml"
            elif [[ $file == infrastructure/rcw-client-public-db-layer.yaml ]]; then
              s3_path="templates/rcw-client-public-db.yaml"
            elif [[ $file == infrastructure/rcw-client-public-app-layer.yaml ]]; then
              s3_path="templates/rcw-client-public-app.yaml"
            elif [[ $file == infrastructure/rcw-paypal-processor.yaml ]]; then
              s3_path="templates/rcw-paypal-processor.yaml"
            else
              echo "Unknown file: $file. Skipping."
              continue
            fi

            aws s3 cp "$file" "s3://rcw-code-bucket/$s3_path" --region us-west-1
          done < filtered_changes.txt

      - name: Deploy Parent Template
        if: env.should_run == 'true'
        run: |
          echo "Deploying parent template..."
          aws cloudformation deploy \
            --template-file infrastructure/rcw-infra.yaml \
            --stack-name RCW-Infrastructure-Prod \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            --region us-west-1 \
            --parameter-overrides \
              Environment=Prod \
              FoundationTemplateS3Uri=https://rcw-code-bucket.s3.us-west-1.amazonaws.com/templates/arch-foundation.yaml \
              ClientPublicDBTemplateS3Uri=https://rcw-code-bucket.s3.us-west-1.amazonaws.com/templates/rcw-client-public-db.yaml \
              ClientPublicAppS3Uri=https://rcw-code-bucket.s3.us-west-1.amazonaws.com/templates/rcw-client-public-app.yaml \
              PaypalProcessorS3Uri=https://rcw-code-bucket.s3.us-west-1.amazonaws.com/templates/rcw-paypal-processor.yaml \
              EmailIdentityRecipientEmail=emmanuelurias60@icloud.com \
              EmailIdentitySenderEmail=emmanuelurias60@nebulaawsconsulting.com \
              PaypalSecret=${{ secrets.PAYPAL_SECRET }} \
              PayPalClientId=${{ secrets.PAYPAL_CLIENT_ID }} \
              SpreadSheetId=1Jpicnmuuuy7aS__mGb-3sLgED9vxvELrvffrDtOHWjo \
              Repository=https://github.com/Nebula-AWS-Consulting/RCW-Infrastructure-Campaign \
              Branch=main \
              OauthToken=${{ secrets.OAUTH_TOKEN }} \
              DomainName=restoredchurchlv.org
